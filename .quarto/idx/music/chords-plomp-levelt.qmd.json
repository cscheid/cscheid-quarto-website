{"title":"Chords, a Plomp-Level analysis","markdown":{"yaml":{"title":"Chords, a Plomp-Level analysis","format":{"html":"default"},"echo":false,"date":"2022-06-12"},"headingText":"Basics: intervals","containsRefs":false,"markdown":"\n\nStatus: _draft_.\n\nWe're hoping to analyze chord consonance/dissonance using the ideas behind Plomp-Levelt curves.\n\nPlomp-Levelt analysis shows sounds are perceived as dissonant when tones, _including harmonics_, are \"near-misses\" of each other. If many tones land right on top of one another, then the overall sound is \"consonant\". If many tones land _near_ each other, then the overall sound is \"dissonant\".\n\nSo we can analyze chords as if they were polyrhythms in frequency. More consonant chords have more\n\"notes\" hitting at the same time.\n\n\nOctaves: (\"2:1 polyrhythm\")\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 200])\n```\n\n:::\n\nFifths (3:2 polyrhythm)\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 150])\n```\n\n:::\n\nFourth, 4:3:\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 133.333333])\n```\n\n:::\n\nMajor third, 5:4:\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 125])\n```\n\n:::\n\nMinor third, 6:5:\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 120])\n```\n\n:::\n\n## Chords\n\n### Triads\n\nMajor triad. A 5:4:z and x:6:5. That's 15:12:10 overall:\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 125, 150])\n```\n\n:::\n\nMajor triad, first inversion. A 4:3:z and x:5:4. That's 20:15:12 overall:\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 100 * (4/3), 100 * (4/3) * (5/4)], 2000)\n```\n\n:::\n\nMajor chord, second inversion. A 6:5:z and 5:y:3. That's 30:25:18 overall:\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 100 * (6/5), 100 * (5/3)], 3000)\n```\n\n:::\n\nMajor chord as root-fifth-tenth. 3:2:z and x:5:3, overall 15:10:6. Fewer \"notes\" than basic major triad. Less rich, but more consonant?\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 150, 150 * 5 / 3])\n```\n\n:::\n\nMinor chord. A 6:5:z and a 3:y:2. That's 6:5:4 overall.\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 120, 150])\n```\n\n:::\n\nDiminished chord. Messy, depends on choice of tritone! Here, 6:5:z and 36:y:25, overall 36:30:25. We don't show that far.\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 120, 144])\n```\n\n:::\n\n### Sevenths\n\nDominant seventh, 5:4:z:w, 3:y:2:w, 9:y:z:5. That's 45:36:30:25, (matching the dimished chord and adding a 45:36 = 5:4 on top). We don't show that far.\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 125, 150, 180])\n```\n\n:::\n\nMajor seventh, 5:4:z:w, 3:y:2:w, 15:y:z:8. That's 15:12:10:8. Compare this to the dominant seventh, and the difference is quite clear. \n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 125, 150, 100 * 15 / 8])\n```\n\n:::\n\nMinor seventh, 6:5:z:w, 3:y:2:w, 9:y:z:5. That's 18:15:12:10. Again a much simpler ratio than the dominant seventh. This seems a decent explanation for why people think the major and minor sevenths are \"stable\" and the dominant seventh wants to be resolved somewhere.\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 120, 150, 180], 1800)\n```\n\n:::\n\n## Resolutions\n\nV7 -> I in first inversion:\n\n::: {.column-page}\n\n```{ojs}\nmakeDiagram([100, 125, 150, 100 * 7 / 4], 3000)\nmakeDiagram([100, 100 * (4/3), 100 * (4/3) * (5/4)], 3000)\n```\n\n:::\n\n\n## Appendix\n\n### Code\n\n```{ojs}\n//| echo: true\nfunction makeDiagram(chords, xMax)\n{\n    xMax = xMax || 1500;\n    const svg = html`<svg width=100% viewBox=\"0 0 990 ${chords.length * 30 + 30}\"></svg>`;\n    \n    d3.select(svg).append(\"rect\")\n        .attr(\"width\", 990).attr(\"height\", 30 * chords.length).attr(\"fill\", \"#eee\");\n\n    const chordGroups = d3.select(svg)\n      .selectAll(\"g\")\n      .data(chords)\n      .enter()\n      .append(\"g\");\n    \n    const x = d3.scaleLinear().domain([50, xMax + 50]).range([0, 990]);\n    const y = d3.scaleLinear().domain([-0.5, chords.length - 0.5]).range([30 * chords.length, 0]);\n\n    chordGroups\n      .append(\"line\")\n      .attr(\"x1\", 0).attr(\"x2\", 990)\n      .attr(\"y1\", (d, i) => y(i)).attr(\"y2\", (d, i) => y(i))\n      .attr(\"stroke\", \"gray\");\n\n    const markGroups = chordGroups\n      .selectAll(\"g\")\n      .data((d, i) => d3.range(1, 50).map(x => ({ x: x * d, y: i }))) // 30 harmonics\n      .enter()\n      .append(\"g\");\n\n    markGroups\n      .append(\"circle\")\n      .attr(\"r\", 2)\n      .attr(\"fill\", \"black\")\n      .attr(\"cx\", d => x(d.x))\n      .attr(\"cy\", d => y(d.y));\n    return svg;\n}\n```\n\n### Notes\n\nDiscouraging: some this ends up being \"simple ratios are good\".\n\nSo maybe we need to include even temperament here since they're _not_ simple ratios but they can get close enough to just that our ears can't tell. This will require taking the actual Plomp-Levelt curve into account for each note.\n\nWe can also take the Pythagorean tuning and predict how chords using wolf intervals will sound dissonant.\n\nTODO: compute clashes among tone pairs.\n\n\n### Ideas\n\nWhat happens if instead of a harmonic sound, we play a super \"fat\" sound by including a large amount of non-harmonic tones _very near one another_, so that a dissonance is \"lost\"? Hmmm..."},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"chords-plomp-levelt.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"99.9.9","theme":["sandstone","../cscheid-net.scss"],"title":"Chords, a Plomp-Level analysis","date":"2022-06-12"},"extensions":{"book":{"multiFile":true}}}}}